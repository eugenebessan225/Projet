# Generated by Django 2.2.9 on 2020-04-04 17:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(choices=[('HOMME', 'HOMME'), ('FEMME', 'FEMME')], max_length=10)),
                ('promotion', models.CharField(choices=[('IT 01', 'IT 01'), ('IT 02', 'IT 02'), ('IT 03', 'IT 03'), ('IT 04', 'IT 04'), ('IT 05', 'IT 05'), ('IT 06', 'IT 06')], max_length=10)),
                ('date_naissance', models.DateField()),
                ('numero_telephone', models.CharField(max_length=20)),
                ('avatar', models.ImageField(default='personne/avatar/avatar.jpg', upload_to='personne/avatar')),
                ('couverture', models.ImageField(default='personne/couverture/avatar.jpg', upload_to='personne/couverture')),
                ('entreprise', models.CharField(max_length=100)),
                ('statut', models.CharField(choices=[('PROFESSIONNEL', 'PROFESSIONNEL'), ('ETUDIANT', 'ETUDIANT')], max_length=50)),
                ('filiere', models.CharField(choices=[('SRIT', 'SRIT'), ('TWIN', 'TWIN'), ('SIGL', 'SIGL'), ('SITW', 'SITW'), ('RTEL', 'RTEL'), ('MDSI', 'MDSI'), ('MBDS', 'MBDS')], max_length=50)),
                ('amis', models.ManyToManyField(related_name='_personne_amis_+', to='pro_it.Personne')),
            ],
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre_projet', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('nbre_jaime', models.IntegerField(default=0)),
                ('nbre_comment', models.IntegerField(default=0)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='pro_it.Personne')),
            ],
        ),
        migrations.CreateModel(
            name='Technologie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Aine',
            fields=[
                ('personne_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Personne')),
            ],
            bases=('pro_it.personne',),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Publication')),
                ('contenu', models.FileField(upload_to='publication/documents/')),
            ],
            bases=('pro_it.publication',),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Publication')),
                ('contenu', models.ImageField(upload_to='publication/images/')),
            ],
            bases=('pro_it.publication',),
        ),
        migrations.CreateModel(
            name='Texte',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Publication')),
                ('contenu', models.TextField()),
            ],
            bases=('pro_it.publication',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Publication')),
                ('contenu', models.FileField(upload_to='publication/videos/')),
            ],
            bases=('pro_it.publication',),
        ),
        migrations.AddField(
            model_name='personne',
            name='technologie',
            field=models.ManyToManyField(to='pro_it.Technologie'),
        ),
        migrations.AddField(
            model_name='personne',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personne', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=50)),
                ('contenu', models.CharField(max_length=500)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('receveur', models.ManyToManyField(related_name='notifications', to='pro_it.Personne')),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('membres', models.ManyToManyField(to='pro_it.Personne')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('envoyeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_env', to='pro_it.Personne')),
                ('receveur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_rec', to='pro_it.Personne')),
            ],
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='pro_it.Personne')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='pro_it.Publication')),
            ],
        ),
        migrations.CreateModel(
            name='Stagiaire',
            fields=[
                ('personne_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pro_it.Personne')),
                ('parrain', models.ManyToManyField(related_name='filieuls', to='pro_it.Aine')),
                ('projet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stagiaire', to='pro_it.Projet')),
            ],
            bases=('pro_it.personne',),
        ),
    ]
